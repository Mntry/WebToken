{
  "name": "Monetary WebToken",
  "tagline": "",
  "body": "# Getting started with Monetary WebToken\r\n\r\n###Include the client on your page\r\n##### Add the secure, hosted JavaScript client in the `<head>` of your page:\r\n```html\r\n<script src=\"https://token.monetary.co/v1/client\"></script>\r\n```\r\n\r\n### Define the required form and controls\r\n\r\n#####Give your payment form a name:\r\n```html\r\n<form name=\"payment_form\">\r\n```\r\n\r\n##### Add the following 4 payment information input controls to your form:\r\n```html\r\n<input type=\"text\" data-token=\"card_number\" />\r\n<input type=\"text\" data-token=\"exp_month\" />\r\n<input type=\"text\" data-token=\"exp_year\" />\r\n<input type=\"text\" data-token=\"cvv\" />\r\n```\r\n**_Note:_** The payment info input controls must not have ID or Name attributes.\r\n\r\n##### Define an input control to insert the token into\r\n```html\r\n<input type=\"hidden\" id=\"token\" />\r\n```\r\n\r\n### Define required JavaScript\r\n##### Define a JavaScript callback method for token events:\r\n```javascript\r\nvar tokenCallback = function(response) {\r\n  if (response.Error)\r\n  {\r\n    alert(\"Token error: \" + response.Error);\r\n  }\r\n  else\r\n  {\r\n    var token = response.Token;\r\n    document.getElementById(\"token\").value = token;\r\n  }\r\n}\r\n```\r\n\r\n### Request a token!\r\n##### Call `requestToken` with your public authenticator, payment form name, and token callback method:\r\n\r\n```javascript\r\nMonetaryWebToken.requestToken(\"[Public Key Goes Here]\", \"payment_form\", tokenCallback);\r\n```\r\n\r\n##### The response object received by your callback method looks like this:\r\n###### On Success\r\n```javascript\r\n{\r\n  Token: \"otu_ABCDEFGHIJ\",\r\n  Brand: \"Visa\",\r\n  ExpirationMonth: \"12\",\r\n  ExpirationYear: \"2020\",\r\n  Last4: \"1111\"\r\n}\r\n```\r\n\r\n###### On Failure\r\n```javascript\r\n{\r\n  Error: \"Failed to create token\"\r\n}\r\n```\r\n\r\n### Validation Helper Methods!\r\nThe Monetary WebToken client provides a few methods to help integrators validate their input fields, for card number, expiration date, and CVV that return `bool` values indicating input validity.\r\n\r\n##### Validate Credit Card Number\r\n```javascript\r\nvar validCard = MonetaryWebToken.validateCardNumber(\"4242424242424242\");\r\n```\r\n\r\n##### Validate Expiration Date\r\n```javascript\r\nvar validExpirationDate = MonetaryWebToken.validateExpirationDate(\"06\", \"2020\");\r\n```\r\n\r\n##### Validate CVV\r\n```javascript\r\nvar validCVV = MonetaryWebToken.validateCVV(\"123\");\r\n```\r\n\r\n### Use your tokens!\r\nNow that you've got fresh tokens in your payment form, you can submit the form and process token payments on Monetary's payment platform!\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}